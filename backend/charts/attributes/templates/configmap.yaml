apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "attributes.name" . }}-cm
data:
  POSTGRES_HOST: {{ .Values.postgres.host }}
  POSTGRES_USER: {{ .Values.postgres.user }}
  {{/*  POSTGRES_PASSWORD: deployment.envFrom.secretRef.attributes-secrets*/}}
  POSTGRES_DATABASE: {{ .Values.postgres.database }}
  POSTGRES_SCHEMA: {{ .Values.postgres.schema }}

  # TODO /auth and /token are well-known and can be hardcoded
  # we do not need two config properties for this - just one.
  OIDC_AUTHORIZATION_URL: {{ .Values.oidc.externalHost }}/realms/{{ .Values.oidc.realm}}/protocol/openid-connect/auth
  OIDC_TOKEN_URL: {{ .Values.oidc.externalHost }}/realms/{{ .Values.oidc.realm}}/protocol/openid-connect/token
  OIDC_CLIENT_ID: {{ .Values.oidc.clientId }}
  OIDC_CLIENT_SECRET: {{ .Values.oidc.clientSecret }}
  OIDC_CONFIGURATION_URL: {{ .Values.oidc.internalHost }}/realms/{{ .Values.oidc.realm}}/.well-known/openid-configuration
  OIDC_REALM: {{ .Values.oidc.realm }}
  OIDC_SERVER_URL: {{ .Values.oidc.internalHost }}/auth
  SERVER_LOG_LEVEL: {{ .Values.logLevel }}
  SERVER_PUBLIC_NAME: {{ .Values.serverPublicName }}
  SERVER_ROOT_PATH: {{ .Values.serverRootPath }}
