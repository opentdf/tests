---
#     .d8b.  d8888b.  .d8b.   .o88b. db    db .d8888.
#    d8' `8b 88  `8D d8' `8b d8P  Y8 88    88 88'  YP
#    88ooo88 88oooY' 88ooo88 8P      88    88 `8bo.
#    88~~~88 88~~~b. 88~~~88 8b      88    88   `Y8b.
#    88   88 88   8D 88   88 Y8b  d8 88b  d88 db   8D
#    YP   YP Y8888P' YP   YP  `Y88P' ~Y8888P' `8888Y'

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: opentdf
    app.kubernetes.io/name: abacus
  name: opentdf-abacus
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
  selector:
    app.kubernetes.io/instance: opentdf
    app.kubernetes.io/name: abacus
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opentdf-abacus
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: opentdf-abacus-cm
data:
  KEYCLOAK_HOST: http://localhost:65432/auth/
  KEYCLOAK_CLIENT_ID: dcr-test
  KEYCLOAK_REALM: tdf
  ATTRIBUTES_HOST: http://localhost:65432/attributes/
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: opentdf-abacus
spec:
  rules:
    - host: localhost
      http:
        paths:
          - backend:
              service:
                name: opentdf-abacus
                port:
                  number: 80
            path: /
            pathType: Prefix
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentdf-abacus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: opentdf
      app.kubernetes.io/name: abacus
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: opentdf
        app.kubernetes.io/name: abacus
    spec:
      serviceAccountName: opentdf-abacus
      containers:
        - name: abacus
          envFrom:
            - configMapRef:
                name: opentdf-abacus-cm
          image: opentdf/abacus:0.2.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
